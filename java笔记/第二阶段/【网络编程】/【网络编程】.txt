网络编程：（又称为套接字编程）
	【套接字】：两台设备之间通讯的端点

	概念：就是在一定的协议下，实现两台计算机的通信的程序

	两种软件结构：
		1.C/S结构：  客户端与服务器端（比如：常见的程序QQ、迅雷、百度云等）

		2.B/S结构：  浏览器与服务器端（比如：常见的浏览器IE、谷歌、火狐 || 程序：博学谷、淘宝、京东）

	
	网络编程规范：（ISO国际化标准组织）
		OSI 七层模型	---------------	   TCP/IP 模型四层
		应用层					应用层
		表现层					传输层
		会话层					网路层
		传输层					数据传输层
		网络层
		数据传输层
		物理层


网络通讯：包括：网络编程、io流、多线程



网络三要素： //利用协议+IP地址+端口号三元组合，就可以标识网络中的进程了，那么进程间的通讯就可以利用这个标识与其他进程进行交互

	1.IP地址：网络中计算机的唯一标识
	2.端口号：正在运行程序的标识
	//0-65535之间 
		其中0-1024之间，为系统或者知名的应用使用的
		1024以上，为自己的程序
	3.协议： 网络中通讯双方遵循的规则
		TCP:面向连接的协议（严格区分为客户端（Client）与服务端（Server））
			1.建立连接通讯，三次握手（详见讲义）
			2.数据无限制
			3.速度慢
			4.可靠
		
		UDP:面向无连接协议（例如：游戏中大喇叭，不管有没有连接，都可以发送）
			1.把数据打包
			2.数据有限制
			3.不会建立连接
			4.速率快
			5.不可靠




Java中，两个实现TCP通讯的程序的类：
	1.java.net.Socket类，创建Scoket对象，向服务端发出连接请求，服务端响应请求，两者建立连接开始通讯
	2.java.net.ServerSocket类，创建ServerSocket对象，相当于开启一个服务，并等待客户端的连接。
	【注意】：流对象都由客户端提供，必须先开服务器，再开客户端
	【阻塞】：通过socket获得的输入流调用read时，如果没有读取的内容时，程序会受到 阻塞，需要调用Socket.shutDown()将输出流关闭。



Socket类：（客户端）

	构造方法： 
		public Socket(String host, int port):创建套接字对象将其连接到指定主机上的指定端口号。【参数】：host为IP地址，port为端口号【如果host是null，相当于指定地址为回送地址，即本机地址】

	成员方法：
		1.public InputStream getInputStream(); 返回此套接字的输入流
		2.public OutputStream getOutputStream(); 返回此套接字的输出流
		3.public void close(): 关闭此套接字
		4.public void shutdownOutput(): 禁用此套接字的输出流
		//任何先前写出的数据将被发送，随后终止输出流


ServerSocket类（服务端）：
	
	构造方法：
		public ServerSocket(int port): 使用该构造方法在创建ServerSocket对象时，就可以将其绑定到一个指定的端口号上，参数port就是端口号。

	成员方法：
		public Socket accept(): 接受连接，返回一个新的Scoket对象，用于和客户端实现通信，该方法一直会阻塞直到建立连接。



【关流提示】：只需关闭socket对象即可，关闭与其相关的流



文件上传优化分析：
	1.文件名写死的问题
		//使用时间戳概念（即当前系统时间System.currentTimeMills），时间毫秒值，当做文件名

	2.回写数据优化
		//当文件传输结束后，不能在写信息到服务器，此时需要使用方法shutDownOutput(),关闭输出流，不在写数据，并通知服务器

	3.循环接收的问题
		//通过循环接受Socket对象，是使服务器不断的接受不同用户的文件

	4.效率问题
		//使用线程