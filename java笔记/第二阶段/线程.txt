进程：
	正在运行中的程序。确切的说，当一个程序进入内存运行，即变成了一个进程，进程是处于运行过程中的程序，并且具有一定独立功能。

线程：
	线程是进程中的一个执行单位，负责当前进程中程序的执行，一个进程中至少有一个线程。一个进程中是可以有多个线程的，这个 应用程序也可以称之为多线程程序。


程序运行原理：
	1.分时调度：所有线程轮流使用CPU的使用权，平均分配每个线程占用的CPU时间
	
	2.抢占式调用：优先让优先级高的线程使用CPU，如果线程的优先级相同，那么会随机选择一个（线程随机性），java使用的为枪占式调度




实现线程的两种方式：
	1.通过类继承Thread，然后实现类中的run方法
		//直接创建Thread的子类对象

	2.通过类实现Runnable接口，然后实现接口中的方法run
		//创建Tread类对象，通过构造方法，传递Runnable接口的实现类






Thread方法：
	1.String getName():  获取线程名字
	
	2.static Thread currentThread()： 返回正在执行的线程对象
		//获取main线程的名称： String name = Thread.currentThread().getName();

	设置线程的名称：
		方式一： 通过构造方法
		方式二： 通过Thread方法setName()

	3.static void sleep(long millis): 使线程进入休眠一段时间







线程池：
	Executors:线程池创建工厂类
	
	ExcutorService：线程池类

	Future接口：用来记录线程任务执行完毕后产生的结构。线程池创建与使用。