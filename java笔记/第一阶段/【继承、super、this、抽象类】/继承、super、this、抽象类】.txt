继承关系中的特点：
	1.子类可以拥有父类的“内容”
	2.子类还可以拥有自己专有的内容
	3.父类没有子类内容

定义父类的格式：(一个普通的类定义)
	public class 父类名称{
		//...
	}

定义子类的格式：
	public class 子类名称 extends 父类名称{
		//...
	}


在父子类的继承关系当中，如果成员变量重名，则创建子类对象时，访问有两种方式：
	1.直接通过子类对象访问成员变量：
		等号左边是谁，就优先用谁的，没有则向上找
		即： Zi zi = new Zi();  就优先用Zi类中的变量
	2.间接通过成员方法访问成员变量：
		该方法属于谁，就优先用谁的，没有则向上找
		即：zi.methodFu();  就优先使用Fu类中的变量
		    zi.methodZi();  就优先使用Zi类中的变量

在类中创建方法，三种位置变量重名调用方式：
	1.局部变量：		直接写成员变量名
	2.本类的成员变量：	this.成员变量名
	3.父类的成员变量：	super.成员变量名

在父子类的继承关系当中，创建子类对象，访问成员方法的规则：
	创建的对象是谁，就优先用谁，如果没有则向上找

注意事项：无论是成员方法还是成员变量，如果没有都向上找父类，绝对不会向下找子类。


重写（Override）：  //覆盖
	概念：在继承关系当中，方法的名称和父类一样，参数列表也一样
	特点：创建的是子类对象，则优先用子类方法

方法覆盖重写的注意事项：
	1.必须保证父子类之间方法的名称相同，参数列表也相同。
	   //可以使用@Override注解来判断方法是否构成重载，注解写在子类重写方法的上面
	2.子类方法的返回值必须【小于等于】父类方法的返回值范围。
	   //Object类是所有类的公共最高父类（祖宗类），String就是它的子类，以下写法不构成重写：
		子：public Object method(){}   与   父：public String method(){}
	3.子类方法的权限必须【大于等于】父类方法的权限修饰符
	   //权限修饰符：public > protected > (default) > private
		//备注：(default)不是关键字default，而是什么都不写，留空

方法重写：
	//IDEA快捷键：输入要重写的方法名();+回车
	调用父类原先的方法内容：super.方法名();

继承关系中，父子类构造方法的访问特点：
	1.子类构造方法当中有一个默认隐含的“super（）”调用，所以在子类对象被创建时，一定是先调用父类构造，后执行子类构造。
	2.子类构造可以通过super关键字来调用父类重载构造  //如super(参数);
	3.super的父类构造调用，必须是子类构造方法的第一个语句，且不能一个子类调用多次super构造。
	4.只有子类构造方法，才能调用父类构造方法，其他子类方法无法访问父类构造方法
	总结：
		子类必须调用父类构造方法，不写则赠送super()；写了则用写的指定的super调用，super只能有一个，还必须是第一个。

super关键字的三种用法：
	1.在子类的成员方法中，访问父类的成员变量。   //super.父类成员变量名
	2.在子类的成员方法中，访问父类的成员方法。   //super.父类成员方法名()
	3.在子类的构造方法中，访问父类的构造方法。   //super(父类构造方法参数)

this关键字的三种用法：
	1.在本类的成员方法中，访问本类的出成员变量。	  //this.本类成员变量名
	2.在本类的成员方法中，访问本类的另一个成员方法。  //this.本类成员方法名（）
	3.在本类的构造方法中，访问本类的另一个构造方法。  //this（本类构造方法参数）
	注意事项：
		A.this(...)调用也必须是构造方法的第一个语句
		B.super和this两种构造调用，不能同时使用。即：两者在一个构造方法里只能写一个

Java继承的三个特点：
	1.单继承性：一个类的直接父类只能有唯一的一个
	2.多级继承：class A entends B     class B entends C
	3.一个父类可以有多个子类： class A extends B   class C extends B

抽象方法和抽象类的格式：
	抽象方法：就是在返回值前面加上abstract关键字，然后去掉大括号，直接分号结束。其他方法书写规则不变
		// public abstract 返回值类型 方法名();
	抽象类：抽象方法所在的类，必须是抽象类才行。在class之前写上abstract即可
		// public abstract class 类名称{}

抽象方法和抽象类的使用：   //IDEA快捷键，鼠标选中父类名alt + 回车
	1.不能直接创建new抽象类对象
	2.必须用一个子类来继承抽象父类
	3.子类必须覆盖重写抽象父类当中的所有抽象方法。
		//覆盖重写（实现）：子类去掉抽象方法中的abstract关键字，然后补上方法体大括号
	4.创建子类对象进行使用。
	注意事项：
		a）抽象类不能创建对象
		b）抽象类中，可以有构造方法，是供子类创建对象时，初始化父类成员使用的
		c）抽象类中，不一定含有抽象方法，但是有抽象方法的类必定是抽象类
		d）抽象类的子类，必须重写抽象父类中所有的抽象方法
		e）抽象类可以有成员变量