正则表达式的匹配规则：
参照帮助文档，在【Pattern类】中有正则表达式的的规则定义，正则表达式中明确区分大小写字母。

String类三个和正则表达式相关的方法：
	1. boolean matches(String 正则的规则)
		//"abc".matches("[a]")  匹配成功返回true
	2. String[] split(String 正则的规则)
		//"abc".split("a")  使用规则将字符串进行切割
	3. String replaceAll(String 正则规则，String 字符串)
		// "abc0123".replaceAll("[\\d]","#")  按照正则规则，替换字符串


检验QQ号是否规范：
	/*
		QQ号规则：首字母不能为0，号码长度为5-10位，且必须是全数字
	*/
	String str = "131231233341";
	boolean b = str.matches("[1-9][0-9]{4,9}");
			//也可写为[1-9][\\d]{4,9}
		//为什么要写为\\d ？？因为单写\d表示把d转译掉，\\d会把中间的\转译，所以就是\d了

检验手机号是否规范：
	/*
		手机号规则：第一位必须是1,第二位只能是{3,4,5,7,8}，后边保证手机位是11位
	*/
	String str = "1323123123123";
	boolean b = str.matches(1[34578][\\d]{9});


split方法的正则使用：
	示例1：
	String str = "12   23 213      1";
	String[] arr = str.split(" +");  //+为正则表达式中的数量词，表示出现一次或多次
	示例2：
	String str = "192.168.1.1";
	String[] arr = str.splil("\\."); //.在正则表达式中表示所有元素，需使用\\来转译它
	